//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Final_System.AppData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class AppointmentSystemEntities : DbContext
    {
        public AppointmentSystemEntities()
            : base("name=AppointmentSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Role> Role { get; set; }
        public DbSet<TblInstructor> TblInstructor { get; set; }
        public DbSet<TblLocation> TblLocation { get; set; }
        public DbSet<tblUser> tblUser { get; set; }
        public DbSet<Training> Training { get; set; }
        public DbSet<Schedule> Schedule { get; set; }
        public DbSet<TrainingType> TrainingType { get; set; }
        public DbSet<vw_TrainingTable> vw_TrainingTable { get; set; }
        public DbSet<vw_UserTable> vw_UserTable { get; set; }
    
        public virtual int sp_deleteUSER(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteUSER", userIDParameter);
        }
    
        public virtual int sp_InsertUser(string userLastname, string userFirstname, string usermiddleIn, string userAddress, string userEmail, string userNumber, string uusername, string userpass, Nullable<int> roleID, string createdBY)
        {
            var userLastnameParameter = userLastname != null ?
                new ObjectParameter("userLastname", userLastname) :
                new ObjectParameter("userLastname", typeof(string));
    
            var userFirstnameParameter = userFirstname != null ?
                new ObjectParameter("userFirstname", userFirstname) :
                new ObjectParameter("userFirstname", typeof(string));
    
            var usermiddleInParameter = usermiddleIn != null ?
                new ObjectParameter("usermiddleIn", usermiddleIn) :
                new ObjectParameter("usermiddleIn", typeof(string));
    
            var userAddressParameter = userAddress != null ?
                new ObjectParameter("userAddress", userAddress) :
                new ObjectParameter("userAddress", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var userNumberParameter = userNumber != null ?
                new ObjectParameter("userNumber", userNumber) :
                new ObjectParameter("userNumber", typeof(string));
    
            var uusernameParameter = uusername != null ?
                new ObjectParameter("Uusername", uusername) :
                new ObjectParameter("Uusername", typeof(string));
    
            var userpassParameter = userpass != null ?
                new ObjectParameter("userpass", userpass) :
                new ObjectParameter("userpass", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(int));
    
            var createdBYParameter = createdBY != null ?
                new ObjectParameter("CreatedBY", createdBY) :
                new ObjectParameter("CreatedBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUser", userLastnameParameter, userFirstnameParameter, usermiddleInParameter, userAddressParameter, userEmailParameter, userNumberParameter, uusernameParameter, userpassParameter, roleIDParameter, createdBYParameter);
        }
    
        public virtual int sp_UPDATEUSER(Nullable<int> userID, string userLastname, string userFirstname, string usermiddleIn, string userAddress, string userEmail, string userNumber, string uusername, string userpass)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var userLastnameParameter = userLastname != null ?
                new ObjectParameter("userLastname", userLastname) :
                new ObjectParameter("userLastname", typeof(string));
    
            var userFirstnameParameter = userFirstname != null ?
                new ObjectParameter("userFirstname", userFirstname) :
                new ObjectParameter("userFirstname", typeof(string));
    
            var usermiddleInParameter = usermiddleIn != null ?
                new ObjectParameter("usermiddleIn", usermiddleIn) :
                new ObjectParameter("usermiddleIn", typeof(string));
    
            var userAddressParameter = userAddress != null ?
                new ObjectParameter("userAddress", userAddress) :
                new ObjectParameter("userAddress", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var userNumberParameter = userNumber != null ?
                new ObjectParameter("userNumber", userNumber) :
                new ObjectParameter("userNumber", typeof(string));
    
            var uusernameParameter = uusername != null ?
                new ObjectParameter("Uusername", uusername) :
                new ObjectParameter("Uusername", typeof(string));
    
            var userpassParameter = userpass != null ?
                new ObjectParameter("userpass", userpass) :
                new ObjectParameter("userpass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UPDATEUSER", userIDParameter, userLastnameParameter, userFirstnameParameter, usermiddleInParameter, userAddressParameter, userEmailParameter, userNumberParameter, uusernameParameter, userpassParameter);
        }
    }
}
